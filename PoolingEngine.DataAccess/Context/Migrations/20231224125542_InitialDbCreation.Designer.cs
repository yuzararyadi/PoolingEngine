// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoolingEngine.DataAccess.Context;

#nullable disable

namespace PoolingEngine.DataAccess.Context.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231224125542_InitialDbCreation")]
    partial class InitialDbCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DeviceItemTagGroup", b =>
                {
                    b.Property<int>("TagGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("deviceItemsId")
                        .HasColumnType("int");

                    b.HasKey("TagGroupsId", "deviceItemsId");

                    b.HasIndex("deviceItemsId");

                    b.ToTable("DeviceItemTagGroup");
                });

            modelBuilder.Entity("DeviceItemTagItem", b =>
                {
                    b.Property<int>("DeviceItemsId")
                        .HasColumnType("int");

                    b.Property<int>("TagItemsId")
                        .HasColumnType("int");

                    b.HasKey("DeviceItemsId", "TagItemsId");

                    b.HasIndex("TagItemsId");

                    b.ToTable("DeviceItemTagItem");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.DeviceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DeviceItems");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.RequestItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeviceItemId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceItemId");

                    b.ToTable("RequestItems");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.TagGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TagGroups");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.TagItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("RequestItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RequestItemId");

                    b.ToTable("TagItems");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.TagValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("RequestItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TagValues");
                });

            modelBuilder.Entity("TagGroupTagItem", b =>
                {
                    b.Property<int>("TagGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("TagItemsId")
                        .HasColumnType("int");

                    b.HasKey("TagGroupsId", "TagItemsId");

                    b.HasIndex("TagItemsId");

                    b.ToTable("TagGroupTagItem");
                });

            modelBuilder.Entity("DeviceItemTagGroup", b =>
                {
                    b.HasOne("PoolingEngine.Domain.Entities.TagGroup", null)
                        .WithMany()
                        .HasForeignKey("TagGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolingEngine.Domain.Entities.DeviceItem", null)
                        .WithMany()
                        .HasForeignKey("deviceItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeviceItemTagItem", b =>
                {
                    b.HasOne("PoolingEngine.Domain.Entities.DeviceItem", null)
                        .WithMany()
                        .HasForeignKey("DeviceItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolingEngine.Domain.Entities.TagItem", null)
                        .WithMany()
                        .HasForeignKey("TagItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.RequestItem", b =>
                {
                    b.HasOne("PoolingEngine.Domain.Entities.DeviceItem", "DeviceItem")
                        .WithMany()
                        .HasForeignKey("DeviceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceItem");
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.TagItem", b =>
                {
                    b.HasOne("PoolingEngine.Domain.Entities.RequestItem", null)
                        .WithMany("TagItem")
                        .HasForeignKey("RequestItemId");
                });

            modelBuilder.Entity("TagGroupTagItem", b =>
                {
                    b.HasOne("PoolingEngine.Domain.Entities.TagGroup", null)
                        .WithMany()
                        .HasForeignKey("TagGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolingEngine.Domain.Entities.TagItem", null)
                        .WithMany()
                        .HasForeignKey("TagItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PoolingEngine.Domain.Entities.RequestItem", b =>
                {
                    b.Navigation("TagItem");
                });
#pragma warning restore 612, 618
        }
    }
}
